apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'


ext {
    KOTLIN_COROUTIMES_VERSION = '1.1.0'

    DAGGER_VERSION = '2.17'

    ARCHITECTURE_COMPONENTS_VERSION = '1.1.1'

    // major version: 1 decimal digit plus a little bit more
    VERSION_MAJOR = 1
    // minor version: 3 decimal digits
    VERSION_MINOR = 1
    // patch version: up to 5 decimal digits
    VERSION_PATCH = 1 // should be build number from build system
}

android {
    compileSdkVersion COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion "${BUILD_TOOLS_VERSION}"

    defaultConfig {
        applicationId "com.couchbase.android.sofapix"

        minSdkVersion 19
        //noinspection OldTargetApi
        targetSdkVersion 27

        versionCode = (VERSION_MAJOR * (10**8)) + (VERSION_MINOR * (10**5)) + VERSION_PATCH
        versionName = "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}@${GIT_COMMIT}"

        buildConfigField "String", "BUILD_COMMIT", "\"${GIT_COMMIT}\""
        buildConfigField "String", "BUILD_TIME", "\"${BUILD_TIME}\""

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    maven { url "http://mobile.maven.couchbase.com/maven2/cimaven/" }
    google()
    jcenter()

}

dependencies {
    kapt "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    kapt "com.google.dagger:dagger-android-processor:${DAGGER_VERSION}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${KOTLIN_VERSION}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${KOTLIN_COROUTIMES_VERSION}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${KOTLIN_COROUTIMES_VERSION}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:${KOTLIN_COROUTIMES_VERSION}"

    // Support Lib
    implementation "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    implementation "com.android.support:recyclerview-v7:${SUPPORT_LIB_VERSION}"
    implementation "com.android.support:design:${SUPPORT_LIB_VERSION}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // Dagger
    implementation "com.google.dagger:dagger:${DAGGER_VERSION}"
    implementation "com.google.dagger:dagger-android-support:${DAGGER_VERSION}"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:${ARCHITECTURE_COMPONENTS_VERSION}"
    implementation "android.arch.lifecycle:common-java8:${ARCHITECTURE_COMPONENTS_VERSION}"
    implementation "android.arch.lifecycle:reactivestreams:${ARCHITECTURE_COMPONENTS_VERSION}"

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'

    // Couchbase
    implementation 'com.couchbase.lite:couchbase-lite-android-ee:2.8.0-98'

    // Java time backport
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.1'

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.2"
}

apply plugin: "io.gitlab.arturbosch.detekt"
detekt {
    toolVersion = "${DETEKT_VERSION}"
    config = files("${project.rootDir}/tools/detekt/detekt.yml")

    input = files(
            "${project.projectDir}/src/main/java",
            "${project.projectDir}/app/src/debug/java",
            "${project.projectDir}/app/src/release/java")

    reports {
        xml {
            enabled = true
            destination = file("${project.buildDir}/reports/detekt.xml")
        }
        html {
            enabled = true
            destination = file("${project.buildDir}/reports/detekt.html")
        }
    }
}

task checkLocal(dependsOn: ['detekt', 'lint', 'assemble', 'test'])

